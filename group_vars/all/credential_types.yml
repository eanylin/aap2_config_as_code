---
controller_credential_types:
  - name: ssh_priv_file
    kind: cloud
    description: creates temp ssh priv key to use (cannot have passphrase)
    inputs:
      fields:
        - id: priv_key
          type: string
          label: Certificate
          format: ssh_private_key
          multiline: true
          secret: true
    injectors:
      env:
        MY_CERT_FILE_PATH: !unsafe '{{ tower.filename.cert_file }}'
      file:
        template.cert_file: !unsafe '{{ priv_key }}'

  - name: automation_hub
    kind: cloud
    description: credentials for automation hub
    inputs:
      fields:
        - id: verify_ssl
          type: boolean
          label: Verify SSL
        - id: hostname
          type: string
          label: Hostname
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
        - id: token
          type: string
          label: Token
          secret: true
      required:
        - hostname
    injectors:
      env:
        AH_HOST: "{{ groups['automationhub'][0] }}"
        AH_PASSWORD: '{{ ah_pass }}'
        AH_USERNAME: '{{ ah_user }}'
        AH_API_TOKEN: '{{ ah_token_password }}'
        AH_VERIFY_SSL: '{{ ah_verify_ssl }}'
      extra_vars:
        ah_host: "{{ groups['automationhub'][0] }}"
        ah_token: '{{ ah_token_password }}'
        ah_password: '{{ ah_pass }}'
        ah_username: '{{ ah_user }}'
        ah_validate_certs: '{{ ah_verify_ssl }}'
...
